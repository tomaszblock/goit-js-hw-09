{"mappings":"AAAA,MAAMA,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAAcH,SAASC,cAAc,mBAC9BD,SAASC,cAAc,SAqD/BG,iBAAiB,UAnDtB,SAAuBC,GACrBA,EAAMC,iBACN,MAAMC,EAAQC,SAAST,EAAWU,OAC5BC,EAAOF,SAASN,EAAUO,OAC1BE,EAASH,SAASL,EAAYM,OAEpC,IAAIG,EAAeL,EAEhB,IAAE,IAAIM,EAAI,EAAGA,GAAKF,EAAQE,IAC3BC,YAAW,KACT,IAAIC,SAAQ,CAACC,EAASC,KACEC,KAAKC,SAAW,GAEpCH,IAEAC,GAAQ,IAGTG,MAAKC,IACJC,QAAQC,IAAI,uBAAqBV,QAAUD,OACzCA,GAA4BF,CAAI,IAEnCc,OAAMC,IACLH,QAAQC,IAAI,sBAAoBV,QAAQD,OACxCA,GAA8BF,CAAI,GAClC,GACHE,E","sources":["src/js/03-promises.js"],"sourcesContent":["const delayInput = document.querySelector('[name=\"delay\"]');\nconst stepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\nconst form = document.querySelector('.form');\n\nfunction createPromise(event) {\n  event.preventDefault();\n  const delay = parseInt(delayInput.value);\n  const step = parseInt(stepInput.value);\n  const amount = parseInt(amountInput.value);\n\n  let currentDelay = delay; // początkowe opóźnienie\n\n  for (let i = 1; i <= amount; i++) {\n    setTimeout(() => {\n      new Promise((resolve, reject) => {\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n          resolve();\n        } else {\n          reject();\n        }\n      })\n        .then(result => {\n          console.log(`✅ Fulfilled promise ${i} in ${currentDelay}ms`);\n          currentDelay = currentDelay + step;\n        })\n        .catch(error => {\n          console.log(`❌ Rejected promise ${i} in ${currentDelay}ms`);\n          currentDelay = currentDelay + step;\n        });\n    }, currentDelay);\n  }\n}\n\n// function createPromise(event, position, delay) {\n//   event.preventDefault();\n//   delay = parseInt(delayInput.value);\n//   let step = parseInt(stepInput.value);\n//   let amount = parseInt(amountInput.value);\n//   let result = 0;\n//   for (let i = 1; i <= amount; i++) {\n//     new Promise((resolve, reject) => {\n//       setTimeout(() => {\n//         const shouldResolve = Math.random() > 0.3;\n//         if (shouldResolve) {\n//           resolve(console.log('tak'));\n//         } else {\n//           // Reject\n//           reject(console.log('nie'));\n//         }\n//       }, delay);\n//     });\n//   }\n// }\n\nform.addEventListener('submit', createPromise);\n"],"names":["$47d4ff9957288465$var$delayInput","document","querySelector","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","addEventListener","event","preventDefault","delay","parseInt","value","step","amount","currentDelay","i","setTimeout","Promise","resolve","reject","Math","random","then","result","console","log","catch","error"],"version":3,"file":"03-promises.af931ed7.js.map"}