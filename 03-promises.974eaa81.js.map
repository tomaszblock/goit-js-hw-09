{"mappings":"AAAA,MAAMA,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAAcH,SAASC,cAAc,mBAC9BD,SAASC,cAAc,SAyB/BG,iBAAiB,UAvBtB,SAAuBC,EAAOC,EAAUC,GACtCF,EAAMG,iBACEC,SAASV,EAAWW,OACjBD,SAASP,EAAUQ,OAA9B,IACIC,EAASF,SAASN,EAAYO,OAElCL,EAAMG,iBACN,IAAK,IAAII,EAAI,EAAGA,GAAKD,EAAQC,IAC3B,IAAIC,SAAQ,CAACC,EAASC,KACpBC,YAAW,KACaC,KAAKC,SAAW,GAGpCC,QAAQC,IAAI,OAGZD,QAAQC,IAAI,MAAM,GAXb,EAaC,G","sources":["src/js/03-promises.js"],"sourcesContent":["const delayInput = document.querySelector('[name=\"delay\"]');\nconst stepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\nconst form = document.querySelector('.form');\n\nfunction createPromise(event, position, delay) {\n  event.preventDefault();\n  delay = parseInt(delayInput.value);\n  let step = parseInt(stepInput.value);\n  let amount = parseInt(amountInput.value);\n  let result = 0;\n  event.preventDefault();\n  for (let i = 1; i <= amount; i++) {\n    new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n          // Fulfill\n          console.log('tak');\n        } else {\n          // Reject\n          console.log('nie');\n        }\n      }, result);\n    });\n  }\n}\n\nform.addEventListener('submit', createPromise);\n"],"names":["$47d4ff9957288465$var$delayInput","document","querySelector","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","addEventListener","event","position","delay","preventDefault","parseInt","value","amount","i","Promise","resolve","reject","setTimeout","Math","random","console","log"],"version":3,"file":"03-promises.974eaa81.js.map"}