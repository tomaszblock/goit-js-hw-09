{"mappings":"YAAA,IAAMA,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAAcH,SAASC,cAAc,mBAC9BD,SAASC,cAAc,SAqD/BG,iBAAiB,UAnDtB,SAAuBC,G,kBASnBC,YAAW,WACT,IAAIC,SAAQ,SAACC,EAASC,GACEC,KAAKC,SAAW,GAEpCH,IAEAC,G,IAGDG,MAAK,SAAAC,GACJC,QAAQC,IAAI,uBAAiCC,OAARC,EAAE,QAAmBD,OAAbE,EAAa,OACxDA,GAA4BC,C,IAE/BC,OAAM,SAAAC,GACLP,QAAQC,IAAI,sBAA8BC,OAARC,EAAE,QAAmBD,OAAbE,EAAa,OACvDA,GAA8BC,C,MAEjCD,E,EAzBLb,EAAMiB,iBAON,IANA,IAAMC,EAAQC,SAASzB,EAAW0B,OAC5BN,EAAOK,SAAStB,EAAUuB,OAC1BC,EAASF,SAASrB,EAAYsB,OAEhCP,EAAeK,EAEVI,EAAI,EAAGA,GAAKD,EAAQC,IAAGC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["const delayInput = document.querySelector('[name=\"delay\"]');\nconst stepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\nconst form = document.querySelector('.form');\n\nfunction createPromise(event) {\n  event.preventDefault();\n  const delay = parseInt(delayInput.value);\n  const step = parseInt(stepInput.value);\n  const amount = parseInt(amountInput.value);\n\n  let currentDelay = delay; // początkowe opóźnienie\n\n  for (let i = 1; i <= amount; i++) {\n    setTimeout(() => {\n      new Promise((resolve, reject) => {\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n          resolve();\n        } else {\n          reject();\n        }\n      })\n        .then(result => {\n          console.log(`✅ Fulfilled promise ${i} in ${currentDelay}ms`);\n          currentDelay = currentDelay + step;\n        })\n        .catch(error => {\n          console.log(`❌ Rejected promise ${i} in ${currentDelay}ms`);\n          currentDelay = currentDelay + step;\n        });\n    }, currentDelay);\n  }\n}\n\n// function createPromise(event, position, delay) {\n//   event.preventDefault();\n//   delay = parseInt(delayInput.value);\n//   let step = parseInt(stepInput.value);\n//   let amount = parseInt(amountInput.value);\n//   let result = 0;\n//   for (let i = 1; i <= amount; i++) {\n//     new Promise((resolve, reject) => {\n//       setTimeout(() => {\n//         const shouldResolve = Math.random() > 0.3;\n//         if (shouldResolve) {\n//           resolve(console.log('tak'));\n//         } else {\n//           // Reject\n//           reject(console.log('nie'));\n//         }\n//       }, delay);\n//     });\n//   }\n// }\n\nform.addEventListener('submit', createPromise);\n"],"names":["$ce04d3a99e08e73b$var$delayInput","document","querySelector","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","addEventListener","event","setTimeout","Promise","resolve","reject","Math","random","then","result","console","log","concat","i","currentDelay","step","catch","error","preventDefault","delay","parseInt","value","amount","i1","_loop"],"version":3,"file":"03-promises.aa2ab706.js.map"}